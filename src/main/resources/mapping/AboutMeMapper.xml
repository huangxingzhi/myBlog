<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.dao.AboutMeMapper">
	<cache readOnly="false" flushInterval="3600"/>
	<resultMap id="BaseResultMap" type="com.base.model.AboutMe">
		<id column="aboutMeId" jdbcType="INTEGER" property="aboutMeId" />
		<result column="realName" jdbcType="VARCHAR" property="realName" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="nowAddress" jdbcType="VARCHAR" property="nowAddress" />
		<result column="likeBook" jdbcType="VARCHAR" property="likeBook" />
		<result column="likeMusic" jdbcType="VARCHAR" property="likeMusic" />
		<result column="essayId" jdbcType="INTEGER" property="essayId" />
		<result column="pictureId" jdbcType="INTEGER" property="pictureId" />
	</resultMap>
	<sql id="All_Column_List">
		a.aboutMeId, a.realName, a.address, a.nowAddress, a.likeBook,a.likeMusic,a.essayId,a.pictureId
	</sql>
	<select id="getAboutMe" resultType="com.base.model.AboutMe">
		select 
		<include refid="All_Column_List" />,
		b.pictureName 
		from aboutme a
		left join picture b on b.pictureId=a.pictureId
		where 1=1 order by a.aboutMeId desc
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" flushCache="true">
		delete from aboutme
		where aboutMeId = #{aboutMeId,jdbcType=INTEGER}
	</delete>
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="aboutMeId" parameterType="com.base.model.AboutMe" flushCache="true">
		insert into aboutme
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="aboutMeId != null">
				aboutMeId,
			</if>
			<if test="realName != null">
				realName,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="nowAddress != null">
				nowAddress,
			</if>
			<if test="likeBook != null">
				likeBook,
			</if>
			<if test="likeMusic != null">
				likeMusic,
			</if>
			<if test="essayId != null">
				essayId,
			</if>
			<if test="pictureId != null">
				pictureId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="aboutMeId != null">
				#{aboutMeId,jdbcType=INTEGER},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="nowAddress != null">
				#{nowAddress,jdbcType=VARCHAR},
			</if>
			<if test="likeBook != null">
				#{likeBook,jdbcType=VARCHAR},
			</if>
			<if test="likeMusic != null">
				#{likeMusic,jdbcType=VARCHAR},
			</if>
			<if test="essayId != null">
				#{essayId,jdbcType=INTEGER},
			</if>
			<if test="pictureId != null">
				#{pictureId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" useGeneratedKeys="true" keyProperty="aboutMeId" parameterType="com.base.model.AboutMe" flushCache="true">
		update aboutme
		<set>
			<if test="realName != null">
				realName = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="nowAddress != null">
				nowAddress = #{nowAddress,jdbcType=VARCHAR},
			</if>
			<if test="likeBook != null">
				likeBook = #{likeBook,jdbcType=VARCHAR},
			</if>
			<if test="likeMusic != null">
				likeMusic = #{likeMusic,jdbcType=VARCHAR},
			</if>
			<if test="essayId != null">
				essayId = #{essayId,jdbcType=INTEGER},
			</if>
			<if test="pictureId != null">
				pictureId = #{pictureId,jdbcType=INTEGER},
			</if>
		</set>
		where aboutMeId = #{aboutMeId,jdbcType=INTEGER}
	</update>
	<select id="countInt" resultType="java.lang.Integer">
		select count(a.aboutMeId) from aboutme a
		where 1=1
	</select>
</mapper>